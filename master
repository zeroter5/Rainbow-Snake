snake;
var fallenLogs = [];
var colors = [ "#8B008B", "#DC143C", "#FF8C00", "#00008B", "#006400", "#FFD700"];
var rgbColors = colors.map(hexToRgb);


function fallenLog() {
	this.middle = (width/2);
	this.opening = random(width/2);
	this.h = 30;
	this.w = 40;
	this.y = 0;
	this.speed = 1;
	this.z = Math.floor(Math.random()*6);

	this.hit = function(snake) {
	if (snake.y > 580) 
		return true;
	else if ((snake.y > this.y -25) && snake.y < this.y+25)
			if(snake.x < this.w+this.opening || snake.x > this.opening+this.middle )
				return true;
	}

	this.show = function() {

		fill(255);
		rect(0, this.y, this.w+this.opening, this.h); //left log
		rect(this.middle+this.opening, this.y, 400-this.w, this.h); //right log
		switch(this.z) {//middle color
		case this.z =1:
		fill(255,0,0);
		rect(this.w+this.opening, this.y, this.middle, this.h);
		break;
		case this.z = 2:
		fill(255,128,0);
		rect(this.w+this.opening, this.y, this.middle, this.h);
		break;
		case this.z = 3:
		fill(255,255,0);
		rect(this.w+this.opening, this.y, this.middle, this.h);
		break;
		case this.z=4:
		fill(0,255,0);
		rect(this.w+this.opening, this.y, this.middle, this.h);
		break;
		case this.z=5:
		fill(0,64,255);
		rect(this.w+this.opening, this.y, this.middle, this.h);
		break;
		case this.z=6:
		fill(191,0,255);
		rect(this.w+this.opening, this.y, this.middle, this.h);
		break;

	}
		fill(255,165,0);
		rect(0,560,400,400); //fire
		
	}
	this.update = function() {
		this.y += this.speed;
	}
	this.offscreen = function() {
		if (this.y > 600) {
			return true;
		}
		else {
				return false; 
			}
		}
	}

function Snake() {
	this.y = height-100;
	this.x = width/2; 
	this.boost = 10;
	this.velocity = 0;
	this.stamina = .1;
	this.adrenaline = -6;
	this.movement = 50;
	this.length = 6; 
	this.count = 0;

	this.show = function() {
		fill(rgbColors[this.count]);
		ellipse(this.x, this.y, 25, 25); 

	}

	this.forward = function() {
	this.velocity += this.adrenaline;
	}
	this.left = function() {
	this.x += 50;
	}
	this.right = function() {
	this.x -= 50;
	}
	this.down = function() {
	this.y += 50;
	}
	this.colorChange = function() {
				this.count += 1;
				if (this.count > 5 ) {
					this.count = 0;
				}

	}
	
	this.update = function() {
		this.velocity += this.stamina; 
		this.y += this.velocity;

		if (this.velocity > 1) {
			this.velocity = 0;
		}
		if(this.y > height) {
			this.y = height;
			this.velocity = 0;
		}

		if (this.y < 0) {
			this.y = 0;
			this.velocity = 0;
		}
		
	}

}

function setup() {
createCanvas(400,600);
snake = new Snake();
fallenLogs.push(new fallenLog());
}

function draw() {
  background(0);

  for (var i = fallenLogs.length-1; i >= 0; i--) {
  	fallenLogs[i].show();
  	fallenLogs[i].update();
  	if(fallenLogs[i].hit(snake)){
  		console.log("hit");
  	}
  	if (fallenLogs[i].offscreen()) {
  		fallenLogs.splice(i,1);
  	}
  	
	
}
  snake.update();
  snake.show();

  if (frameCount % 300 == 0) {
  	fallenLogs.push(new fallenLog());
  
  }

  }
  function hexToRgb(hex) { //thanks random stack overflow user for this method
  var res = hex.match(/[a-f0-9]{2}/gi);
  return res && res.length === 3
    ? res.map(function(v) { return parseInt(v, 16) })
    : null;
}

document.addEventListener("keydown",controls);
function controls(event)  {
		let x = event.keyCode;
	switch(x) {
	case 38:
		console.log("colorChange");
		snake.colorChange();
		break;
	case 32: 
		console.log("space");
		snake.forward();
		break;
	case 37: 
		console.log("left arrow");
		snake.right();
		break;
	case 39: 
		console.log("right arrow");
		snake.left();
		break;
	case 40:
		console.log("down");
		snake.down();
		break;
	}

}
